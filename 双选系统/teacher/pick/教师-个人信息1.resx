<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QDKRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAACUAAAALAAAAABVTklDT0RFAABsAGkAYgBnAGkAdAAtADIAMAAxADcALQAwADMALQAyADMALQA3
        AGEAYwA0ADYANwBmAC0AYwBmAGkAbABlAEoAUABHADIASgBQAEcAXwBSAEUAUwBBAE0AUABMAEUALQBn
        AGkAdAAtADIAMAAxADcALQAwADMALQAyADMALQAxADEANQA3AGMAYwA5AAD/2wBDAAgEBAQEBAUFBQUF
        BQYGBgYGBgYGBgYGBgYHBwcICAgHBwcGBgcHCAgICAkJCQgICAgJCQoKCgwMCwsODg4RERT/wAARCACC
        AIIDASIAAhEAAxEA/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUF
        BAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
        ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ip
        qrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEB
        AQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMi
        MoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVm
        Z2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU
        1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2nNGabmius4rj80maRTQWAHNAXItR
        1C00uynvLuVYYYELyOxAAAHv3PQDvXi/jj4s3niC4nt7CPEDZiEsudqq3yny0PAYjjfyx9qm+MnxIfWr
        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
        gwVWD/i/Jk4z+BL5HltFFFdZwH//2Q==
</value>
  </data>
</root>